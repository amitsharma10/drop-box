{"version":3,"sources":["/Users/ashar61/work/projects/drop-box/node_modules/mkdirp/node_modules/minimist/test/dash.js"],"names":[],"mappings":";;AAAA,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AAC3B,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE3B,IAAI,CAAC,GAAG,EAAE,UAAU,CAAC,EAAE;AACnB,KAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACV,KAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAE,IAAI,EAAE,GAAG,CAAE,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACrD,KAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAE,GAAG,CAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAE,GAAG,CAAE,EAAE,CAAC,CAAC;AAC5C,KAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAE,KAAK,CAAE,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACjD,KAAC,CAAC,SAAS,CACP,KAAK,CAAC,CAAE,IAAI,EAAE,GAAG,CAAE,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,EACtC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAE,GAAG,CAAE,EAAE,CAC1B,CAAC;AACF,KAAC,CAAC,SAAS,CACP,KAAK,CAAC,CAAE,IAAI,EAAE,GAAG,CAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,EACrC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CACpB,CAAC;CACL,CAAC,CAAC;;AAEH,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,EAAE;AACzB,KAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACV,KAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAE,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAE,GAAG,CAAE,EAAE,CAAC,CAAC;AACjE,KAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAE,KAAK,EAAE,IAAI,EAAE,GAAG,CAAE,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAE,GAAG,CAAE,EAAE,CAAC,CAAC;AAClE,KAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAE,KAAK,EAAE,IAAI,EAAE,GAAG,CAAE,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAE,GAAG,CAAE,EAAE,CAAC,CAAC;CACrE,CAAC,CAAC","file":"dash-compiled.js","sourcesContent":["var parse = require('../');\nvar test = require('tape');\n\ntest('-', function (t) {\n    t.plan(5);\n    t.deepEqual(parse([ '-n', '-' ]), { n: '-', _: [] });\n    t.deepEqual(parse([ '-' ]), { _: [ '-' ] });\n    t.deepEqual(parse([ '-f-' ]), { f: '-', _: [] });\n    t.deepEqual(\n        parse([ '-b', '-' ], { boolean: 'b' }),\n        { b: true, _: [ '-' ] }\n    );\n    t.deepEqual(\n        parse([ '-s', '-' ], { string: 's' }),\n        { s: '-', _: [] }\n    );\n});\n\ntest('-a -- b', function (t) {\n    t.plan(3);\n    t.deepEqual(parse([ '-a', '--', 'b' ]), { a: true, _: [ 'b' ] });\n    t.deepEqual(parse([ '--a', '--', 'b' ]), { a: true, _: [ 'b' ] });\n    t.deepEqual(parse([ '--a', '--', 'b' ]), { a: true, _: [ 'b' ] });\n});\n"]}