{"version":3,"sources":["/Users/ashar61/work/projects/drop-box/node_modules/rimraf/rimraf.js"],"names":[],"mappings":"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","file":"rimraf-compiled.js","sourcesContent":["module.exports = rimraf\nrimraf.sync = rimrafSync\n\nvar assert = require(\"assert\")\nvar path = require(\"path\")\nvar fs = require(\"fs\")\nvar glob = require(\"glob\")\n\nvar globOpts = {\n  nosort: true,\n  nocomment: true,\n  nonegate: true,\n  silent: true\n}\n\n// for EMFILE handling\nvar timeout = 0\n\nvar isWindows = (process.platform === \"win32\")\n\nfunction defaults (options) {\n  var methods = [\n    'unlink',\n    'chmod',\n    'stat',\n    'lstat',\n    'rmdir',\n    'readdir'\n  ]\n  methods.forEach(function(m) {\n    options[m] = options[m] || fs[m]\n    m = m + 'Sync'\n    options[m] = options[m] || fs[m]\n  })\n\n  options.maxBusyTries = options.maxBusyTries || 3\n  options.emfileWait = options.emfileWait || 1000\n}\n\nfunction rimraf (p, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = {}\n  }\n\n  assert(p, 'rimraf: missing path')\n  assert.equal(typeof p, 'string', 'rimraf: path should be a string')\n  assert(options, 'rimraf: missing options')\n  assert.equal(typeof options, 'object', 'rimraf: options should be object')\n  assert.equal(typeof cb, 'function', 'rimraf: callback function required')\n\n  defaults(options)\n\n  var busyTries = 0\n  var errState = null\n  var n = 0\n\n  if (!glob.hasMagic(p))\n    return afterGlob(null, [p])\n\n  fs.lstat(p, function (er, stat) {\n    if (!er)\n      return afterGlob(null, [p])\n\n    glob(p, globOpts, afterGlob)\n  })\n\n  function next (er) {\n    errState = errState || er\n    if (--n === 0)\n      cb(errState)\n  }\n\n  function afterGlob (er, results) {\n    if (er)\n      return cb(er)\n\n    n = results.length\n    if (n === 0)\n      return cb()\n\n    results.forEach(function (p) {\n      rimraf_(p, options, function CB (er) {\n        if (er) {\n          if (isWindows && (er.code === \"EBUSY\" || er.code === \"ENOTEMPTY\") &&\n              busyTries < options.maxBusyTries) {\n            busyTries ++\n            var time = busyTries * 100\n            // try again, with the same exact callback as this one.\n            return setTimeout(function () {\n              rimraf_(p, options, CB)\n            }, time)\n          }\n\n          // this one won't happen if graceful-fs is used.\n          if (er.code === \"EMFILE\" && timeout < options.emfileWait) {\n            return setTimeout(function () {\n              rimraf_(p, options, CB)\n            }, timeout ++)\n          }\n\n          // already gone\n          if (er.code === \"ENOENT\") er = null\n        }\n\n        timeout = 0\n        next(er)\n      })\n    })\n  }\n}\n\n// Two possible strategies.\n// 1. Assume it's a file.  unlink it, then do the dir stuff on EPERM or EISDIR\n// 2. Assume it's a directory.  readdir, then do the file stuff on ENOTDIR\n//\n// Both result in an extra syscall when you guess wrong.  However, there\n// are likely far more normal files in the world than directories.  This\n// is based on the assumption that a the average number of files per\n// directory is >= 1.\n//\n// If anyone ever complains about this, then I guess the strategy could\n// be made configurable somehow.  But until then, YAGNI.\nfunction rimraf_ (p, options, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  // sunos lets the root user unlink directories, which is... weird.\n  // so we have to lstat here and make sure it's not a dir.\n  options.lstat(p, function (er, st) {\n    if (er && er.code === \"ENOENT\")\n      return cb(null)\n\n    if (st && st.isDirectory())\n      return rmdir(p, options, er, cb)\n\n    options.unlink(p, function (er) {\n      if (er) {\n        if (er.code === \"ENOENT\")\n          return cb(null)\n        if (er.code === \"EPERM\")\n          return (isWindows)\n            ? fixWinEPERM(p, options, er, cb)\n            : rmdir(p, options, er, cb)\n        if (er.code === \"EISDIR\")\n          return rmdir(p, options, er, cb)\n      }\n      return cb(er)\n    })\n  })\n}\n\nfunction fixWinEPERM (p, options, er, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n  if (er)\n    assert(er instanceof Error)\n\n  options.chmod(p, 666, function (er2) {\n    if (er2)\n      cb(er2.code === \"ENOENT\" ? null : er)\n    else\n      options.stat(p, function(er3, stats) {\n        if (er3)\n          cb(er3.code === \"ENOENT\" ? null : er)\n        else if (stats.isDirectory())\n          rmdir(p, options, er, cb)\n        else\n          options.unlink(p, cb)\n      })\n  })\n}\n\nfunction fixWinEPERMSync (p, options, er) {\n  assert(p)\n  assert(options)\n  if (er)\n    assert(er instanceof Error)\n\n  try {\n    options.chmodSync(p, 666)\n  } catch (er2) {\n    if (er2.code === \"ENOENT\")\n      return\n    else\n      throw er\n  }\n\n  try {\n    var stats = options.statSync(p)\n  } catch (er3) {\n    if (er3.code === \"ENOENT\")\n      return\n    else\n      throw er\n  }\n\n  if (stats.isDirectory())\n    rmdirSync(p, options, er)\n  else\n    options.unlinkSync(p)\n}\n\nfunction rmdir (p, options, originalEr, cb) {\n  assert(p)\n  assert(options)\n  if (originalEr)\n    assert(originalEr instanceof Error)\n  assert(typeof cb === 'function')\n\n  // try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS)\n  // if we guessed wrong, and it's not a directory, then\n  // raise the original error.\n  options.rmdir(p, function (er) {\n    if (er && (er.code === \"ENOTEMPTY\" || er.code === \"EEXIST\" || er.code === \"EPERM\"))\n      rmkids(p, options, cb)\n    else if (er && er.code === \"ENOTDIR\")\n      cb(originalEr)\n    else\n      cb(er)\n  })\n}\n\nfunction rmkids(p, options, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  options.readdir(p, function (er, files) {\n    if (er)\n      return cb(er)\n    var n = files.length\n    if (n === 0)\n      return options.rmdir(p, cb)\n    var errState\n    files.forEach(function (f) {\n      rimraf(path.join(p, f), options, function (er) {\n        if (errState)\n          return\n        if (er)\n          return cb(errState = er)\n        if (--n === 0)\n          options.rmdir(p, cb)\n      })\n    })\n  })\n}\n\n// this looks simpler, and is strictly *faster*, but will\n// tie up the JavaScript thread and fail on excessively\n// deep directory trees.\nfunction rimrafSync (p, options) {\n  options = options || {}\n  defaults(options)\n\n  assert(p, 'rimraf: missing path')\n  assert.equal(typeof p, 'string', 'rimraf: path should be a string')\n  assert(options, 'rimraf: missing options')\n\n  var results\n\n  if (!glob.hasMagic(p)) {\n    results = [p]\n  } else {\n    try {\n      fs.lstatSync(p)\n      results = [p]\n    } catch (er) {\n      results = glob.sync(p, globOpts)\n    }\n  }\n\n  if (!results.length)\n    return\n\n  for (var i = 0; i < results.length; i++) {\n    var p = results[i]\n\n    try {\n      var st = options.lstatSync(p)\n    } catch (er) {\n      if (er.code === \"ENOENT\")\n        return\n    }\n\n    try {\n      // sunos lets the root user unlink directories, which is... weird.\n      if (st && st.isDirectory())\n        rmdirSync(p, options, null)\n      else\n        options.unlinkSync(p)\n    } catch (er) {\n      if (er.code === \"ENOENT\")\n        return\n      if (er.code === \"EPERM\")\n        return isWindows ? fixWinEPERMSync(p, options, er) : rmdirSync(p, options, er)\n      if (er.code !== \"EISDIR\")\n        throw er\n      rmdirSync(p, options, er)\n    }\n  }\n}\n\nfunction rmdirSync (p, options, originalEr) {\n  assert(p)\n  assert(options)\n  if (originalEr)\n    assert(originalEr instanceof Error)\n\n  try {\n    options.rmdirSync(p)\n  } catch (er) {\n    if (er.code === \"ENOENT\")\n      return\n    if (er.code === \"ENOTDIR\")\n      throw originalEr\n    if (er.code === \"ENOTEMPTY\" || er.code === \"EEXIST\" || er.code === \"EPERM\")\n      rmkidsSync(p, options)\n  }\n}\n\nfunction rmkidsSync (p, options) {\n  assert(p)\n  assert(options)\n  options.readdirSync(p).forEach(function (f) {\n    rimrafSync(path.join(p, f), options)\n  })\n  options.rmdirSync(p, options)\n}\n"]}