{"version":3,"sources":["/Users/ashar61/work/projects/drop-box/node_modules/rimraf/node_modules/glob/common.js"],"names":[],"mappings":";;AAAA,OAAO,CAAC,SAAS,GAAG,SAAS,CAAA;AAC7B,OAAO,CAAC,UAAU,GAAG,UAAU,CAAA;AAC/B,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,QAAQ,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAA;AACpE,OAAO,CAAC,OAAO,GAAG,OAAO,CAAA;AACzB,OAAO,CAAC,OAAO,GAAG,OAAO,CAAA;AACzB,OAAO,CAAC,OAAO,GAAG,OAAO,CAAA;AACzB,OAAO,CAAC,MAAM,GAAG,MAAM,CAAA;AACvB,OAAO,CAAC,IAAI,GAAG,IAAI,CAAA;AACnB,OAAO,CAAC,SAAS,GAAG,SAAS,CAAA;AAC7B,OAAO,CAAC,eAAe,GAAG,eAAe,CAAA;;AAEzC,SAAS,OAAO,CAAE,GAAG,EAAE,KAAK,EAAE;AAC5B,SAAO,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;CACxD;;AAED,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;AAC1B,IAAI,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC,CAAA;AACpC,IAAI,SAAS,GAAG,SAAS,CAAC,SAAS,CAAA;;AAEnC,SAAS,MAAM,CAAE,CAAC,EAAE;AAClB,MAAI,OAAO,CAAC,CAAC,CAAC;AAAE,WAAO,IAAI,CAAA;GAAA;;AAG3B,MAAI,aAAa,GACb,oEAAoE,CAAA;AACxE,MAAI,MAAM,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;AAClC,MAAI,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;AAC5B,MAAI,KAAK,GAAG,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAA;AAC9C,MAAI,UAAU,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,KAAK,CAAA;;AAErC,SAAO,UAAU,CAAA;CAClB;;AAED,SAAS,OAAO,CAAE,CAAC,EAAE;AACnB,SAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAA;CACvC;;AAED,SAAS,UAAU,CAAE,CAAC,EAAE,CAAC,EAAE;AACzB,SAAO,CAAC,CAAC,WAAW,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAA;CACtD;;AAED,SAAS,SAAS,CAAE,CAAC,EAAE,CAAC,EAAE;AACxB,SAAO,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAA;CAC1B;;AAED,SAAS,YAAY,CAAE,IAAI,EAAE,OAAO,EAAE;AACpC,MAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,EAAE,CAAA;;AAElC,MAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAC7B,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;;AAE7B,MAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;AACtB,QAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;GACzC;CACF;;AAED,SAAS,SAAS,CAAE,OAAO,EAAE;AAC3B,MAAI,QAAQ,GAAG,IAAI,CAAA;AACnB,MAAI,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;AAC/B,QAAI,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAA;AAChD,YAAQ,GAAG,IAAI,SAAS,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAA;GACvD;;AAED,SAAO;AACL,WAAO,EAAE,IAAI,SAAS,CAAC,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;AACnD,YAAQ,EAAE,QAAQ;GACnB,CAAA;CACF;;AAED,SAAS,OAAO,CAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE;AACxC,MAAI,CAAC,OAAO,EACV,OAAO,GAAG,EAAE,CAAA;;;AAGd,MAAI,OAAO,CAAC,SAAS,IAAI,CAAC,CAAC,KAAK,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AACpD,QAAI,OAAO,CAAC,UAAU,EAAE;AACtB,YAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAA;KACnD;AACD,WAAO,GAAG,KAAK,GAAG,OAAO,CAAA;GAC1B;;AAED,MAAI,CAAC,OAAO,GAAG,OAAO,CAAA;AACtB,MAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,KAAK,KAAK,CAAA;AACtC,MAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAA;AAClC,MAAI,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;AACjE,MAAI,CAAC,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,CAAA;AAC9B,MAAI,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAA;AACxB,MAAI,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAA;AAC1B,MAAI,CAAC,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAA;AAC5B,MAAI,IAAI,CAAC,KAAK,EACZ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;AAClB,MAAI,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAA;AAC1B,MAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAA;AAClC,MAAI,CAAC,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,CAAA;AAC9B,MAAI,CAAC,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,CAAA;AAC9B,MAAI,CAAC,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,CAAA;AAC9B,MAAI,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAA;AAC1B,MAAI,CAAC,SAAS,GAAG,CAAC,CAAC,OAAO,CAAC,SAAS,CAAA;;AAEpC,MAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,QAAQ,CAAA;AAC9C,MAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;AACjD,MAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;AACzD,MAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;;AAEvD,cAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAA;;AAE3B,MAAI,CAAC,UAAU,GAAG,KAAK,CAAA;AACvB,MAAI,GAAG,GAAG,OAAO,CAAC,GAAG,EAAE,CAAA;AACvB,MAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,EAC1B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAA,KACX;AACH,QAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAA;AACtB,QAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,CAAA;GACpD;;AAED,MAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;AACvD,MAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AACnC,MAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,EAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAA;;AAE3C,MAAI,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,CAAA;;AAEhC,MAAI,CAAC,SAAS,GAAG,IAAI,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAA;AAChD,MAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAA;CACtC;;AAED,SAAS,MAAM,CAAE,IAAI,EAAE;AACrB,MAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAA;AACvB,MAAI,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;;AAExC,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,EAAE;AACpD,QAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;AAC7B,QAAI,CAAC,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;AACjD,UAAI,IAAI,CAAC,MAAM,EAAE;;AAEf,YAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;AACvC,YAAI,GAAG,EACL,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA,KAEjB,GAAG,CAAC,OAAO,CAAC,GAAG,IAAI,CAAA;OACtB;KACF,MAAM;;AAEL,UAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;AAC5B,UAAI,GAAG,EACL,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA,KAEtB,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AACrB,WAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAA;OACd,CAAC,CAAA;KACL;GACF;;AAED,MAAI,CAAC,GAAG,EACN,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;;AAExB,MAAI,CAAC,IAAI,CAAC,MAAM,EACd,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,UAAU,GAAG,SAAS,CAAC,CAAA;;;AAGtD,MAAI,IAAI,CAAC,IAAI,EAAE;AACb,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnC,SAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;KAC5B;AACD,QAAI,IAAI,CAAC,KAAK,EAAE;AACd,SAAG,GAAG,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE;AAC5B,eAAO,CAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,AAAC,CAAA;OACxB,CAAC,CAAA;KACH;GACF;;AAED,MAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EACpB,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,UAAS,CAAC,EAAE;AAC3B,WAAO,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;GAC3B,CAAC,CAAA;;AAEJ,MAAI,CAAC,KAAK,GAAG,GAAG,CAAA;CACjB;;AAED,SAAS,IAAI,CAAE,IAAI,EAAE,CAAC,EAAE;AACtB,MAAI,GAAG,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;AAC1B,MAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;AACvB,MAAI,CAAC,GAAG,CAAC,CAAA;AACT,MAAI,CAAC,EAAE;AACL,QAAI,KAAK,GAAG,CAAC,KAAK,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;AAC3C,QAAI,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAA;;AAE/B,QAAI,KAAK,IAAI,CAAC,KAAK,EACjB,CAAC,IAAI,GAAG,CAAA,KACL,IAAI,CAAC,KAAK,IAAI,KAAK,EACtB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;;AAEpB,QAAI,CAAC,KAAK,CAAC,EAAE;AACX,UAAI,IAAI,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;AAC3B,UAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA;AAC1C,UAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;KACnC;GACF;;AAED,SAAO,CAAC,CAAA;CACT;;;AAGD,SAAS,OAAO,CAAE,IAAI,EAAE,CAAC,EAAE;AACzB,MAAI,GAAG,GAAG,CAAC,CAAA;AACX,MAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACvB,OAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;GAC9B,MAAM,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;AAChC,OAAG,GAAG,CAAC,CAAA;GACR,MAAM,IAAI,IAAI,CAAC,UAAU,EAAE;AAC1B,OAAG,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA;GAChC,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;AACxB,OAAG,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;GACtB;AACD,SAAO,GAAG,CAAA;CACX;;;;AAKD,SAAS,SAAS,CAAE,IAAI,EAAE,IAAI,EAAE;AAC9B,MAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM;AACrB,WAAO,KAAK,CAAA;GAAA,AAEd,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAS,IAAI,EAAE;AACrC,WAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA,AAAC,CAAA;GAClF,CAAC,CAAA;CACH;;AAED,SAAS,eAAe,CAAE,IAAI,EAAE,IAAI,EAAE;AACpC,MAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM;AACrB,WAAO,KAAK,CAAA;GAAA,AAEd,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAS,IAAI,EAAE;AACrC,WAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA,AAAC,CAAA;GACtD,CAAC,CAAA;CACH","file":"common-compiled.js","sourcesContent":["exports.alphasort = alphasort\nexports.alphasorti = alphasorti\nexports.isAbsolute = process.platform === \"win32\" ? absWin : absUnix\nexports.setopts = setopts\nexports.ownProp = ownProp\nexports.makeAbs = makeAbs\nexports.finish = finish\nexports.mark = mark\nexports.isIgnored = isIgnored\nexports.childrenIgnored = childrenIgnored\n\nfunction ownProp (obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field)\n}\n\nvar path = require(\"path\")\nvar minimatch = require(\"minimatch\")\nvar Minimatch = minimatch.Minimatch\n\nfunction absWin (p) {\n  if (absUnix(p)) return true\n  // pull off the device/UNC bit from a windows path.\n  // from node's lib/path.js\n  var splitDeviceRe =\n      /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/\n  var result = splitDeviceRe.exec(p)\n  var device = result[1] || ''\n  var isUnc = device && device.charAt(1) !== ':'\n  var isAbsolute = !!result[2] || isUnc // UNC paths are always absolute\n\n  return isAbsolute\n}\n\nfunction absUnix (p) {\n  return p.charAt(0) === \"/\" || p === \"\"\n}\n\nfunction alphasorti (a, b) {\n  return a.toLowerCase().localeCompare(b.toLowerCase())\n}\n\nfunction alphasort (a, b) {\n  return a.localeCompare(b)\n}\n\nfunction setupIgnores (self, options) {\n  self.ignore = options.ignore || []\n\n  if (!Array.isArray(self.ignore))\n    self.ignore = [self.ignore]\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap)\n  }\n}\n\nfunction ignoreMap (pattern) {\n  var gmatcher = null\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\n    gmatcher = new Minimatch(gpattern, { nonegate: true })\n  }\n\n  return {\n    matcher: new Minimatch(pattern, { nonegate: true }),\n    gmatcher: gmatcher\n  }\n}\n\nfunction setopts (self, pattern, options) {\n  if (!options)\n    options = {}\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  self.pattern = pattern\n  self.strict = options.strict !== false\n  self.realpath = !!options.realpath\n  self.realpathCache = options.realpathCache || Object.create(null)\n  self.follow = !!options.follow\n  self.dot = !!options.dot\n  self.mark = !!options.mark\n  self.nodir = !!options.nodir\n  if (self.nodir)\n    self.mark = true\n  self.sync = !!options.sync\n  self.nounique = !!options.nounique\n  self.nonull = !!options.nonull\n  self.nosort = !!options.nosort\n  self.nocase = !!options.nocase\n  self.stat = !!options.stat\n  self.noprocess = !!options.noprocess\n\n  self.maxLength = options.maxLength || Infinity\n  self.cache = options.cache || Object.create(null)\n  self.statCache = options.statCache || Object.create(null)\n  self.symlinks = options.symlinks || Object.create(null)\n\n  setupIgnores(self, options)\n\n  self.changedCwd = false\n  var cwd = process.cwd()\n  if (!ownProp(options, \"cwd\"))\n    self.cwd = cwd\n  else {\n    self.cwd = options.cwd\n    self.changedCwd = path.resolve(options.cwd) !== cwd\n  }\n\n  self.root = options.root || path.resolve(self.cwd, \"/\")\n  self.root = path.resolve(self.root)\n  if (process.platform === \"win32\")\n    self.root = self.root.replace(/\\\\/g, \"/\")\n\n  self.nomount = !!options.nomount\n\n  self.minimatch = new Minimatch(pattern, options)\n  self.options = self.minimatch.options\n}\n\nfunction finish (self) {\n  var nou = self.nounique\n  var all = nou ? [] : Object.create(null)\n\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\n    var matches = self.matches[i]\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i]\n        if (nou)\n          all.push(literal)\n        else\n          all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou)\n        all.push.apply(all, m)\n      else\n        m.forEach(function (m) {\n          all[m] = true\n        })\n    }\n  }\n\n  if (!nou)\n    all = Object.keys(all)\n\n  if (!self.nosort)\n    all = all.sort(self.nocase ? alphasorti : alphasort)\n\n  // at *some* point we statted all of these\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i])\n    }\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        return !(/\\/$/.test(e))\n      })\n    }\n  }\n\n  if (self.ignore.length)\n    all = all.filter(function(m) {\n      return !isIgnored(self, m)\n    })\n\n  self.found = all\n}\n\nfunction mark (self, p) {\n  var abs = makeAbs(self, p)\n  var c = self.cache[abs]\n  var m = p\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c)\n    var slash = p.slice(-1) === '/'\n\n    if (isDir && !slash)\n      m += '/'\n    else if (!isDir && slash)\n      m = m.slice(0, -1)\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m)\n      self.statCache[mabs] = self.statCache[abs]\n      self.cache[mabs] = self.cache[abs]\n    }\n  }\n\n  return m\n}\n\n// lotta situps...\nfunction makeAbs (self, f) {\n  var abs = f\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f)\n  } else if (exports.isAbsolute(f)) {\n    abs = f\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f)\n  } else if (self.realpath) {\n    abs = path.resolve(f)\n  }\n  return abs\n}\n\n\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\nfunction isIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nfunction childrenIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n"]}