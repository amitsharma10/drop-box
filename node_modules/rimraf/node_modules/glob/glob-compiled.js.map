{"version":3,"sources":["/Users/ashar61/work/projects/drop-box/node_modules/rimraf/node_modules/glob/glob.js"],"names":[],"mappings":"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","file":"glob-compiled.js","sourcesContent":["// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern, false)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern, inGlobStar)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n//\n// If inGlobStar and PREFIX is symlink and points to dir\n//   set ENTRIES = []\n// else readdir(PREFIX) as ENTRIES\n//   If fail, END\n//\n// with ENTRIES\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       // Mark that this entry is a globstar match\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\nmodule.exports = glob\n\nvar fs = require('fs')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar inherits = require('inherits')\nvar EE = require('events').EventEmitter\nvar path = require('path')\nvar assert = require('assert')\nvar globSync = require('./sync.js')\nvar common = require('./common.js')\nvar alphasort = common.alphasort\nvar alphasorti = common.alphasorti\nvar isAbsolute = common.isAbsolute\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar inflight = require('inflight')\nvar util = require('util')\nvar childrenIgnored = common.childrenIgnored\n\nvar once = require('once')\n\nfunction glob (pattern, options, cb) {\n  if (typeof options === 'function') cb = options, options = {}\n  if (!options) options = {}\n\n  if (options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return globSync(pattern, options)\n  }\n\n  return new Glob(pattern, options, cb)\n}\n\nglob.sync = globSync\nvar GlobSync = glob.GlobSync = globSync.GlobSync\n\n// old api surface\nglob.glob = glob\n\nglob.hasMagic = function (pattern, options_) {\n  var options = util._extend({}, options_)\n  options.noprocess = true\n\n  var g = new Glob(pattern, options)\n  var set = g.minimatch.set\n  if (set.length > 1)\n    return true\n\n  for (var j = 0; j < set[0].length; j++) {\n    if (typeof set[0][j] !== 'string')\n      return true\n  }\n\n  return false\n}\n\nglob.Glob = Glob\ninherits(Glob, EE)\nfunction Glob (pattern, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = null\n  }\n\n  if (options && options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return new GlobSync(pattern, options)\n  }\n\n  if (!(this instanceof Glob))\n    return new Glob(pattern, options, cb)\n\n  setopts(this, pattern, options)\n  this._didRealPath = false\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n)\n\n  if (typeof cb === 'function') {\n    cb = once(cb)\n    this.on('error', cb)\n    this.on('end', function (matches) {\n      cb(null, matches)\n    })\n  }\n\n  var self = this\n  var n = this.minimatch.set.length\n  this._processing = 0\n  this.matches = new Array(n)\n\n  this._emitQueue = []\n  this._processQueue = []\n  this.paused = false\n\n  if (this.noprocess)\n    return this\n\n  if (n === 0)\n    return done()\n\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false, done)\n  }\n\n  function done () {\n    --self._processing\n    if (self._processing <= 0)\n      self._finish()\n  }\n}\n\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob)\n  if (this.aborted)\n    return\n\n  if (this.realpath && !this._didRealpath)\n    return this._realpath()\n\n  common.finish(this)\n  this.emit('end', this.found)\n}\n\nGlob.prototype._realpath = function () {\n  if (this._didRealpath)\n    return\n\n  this._didRealpath = true\n\n  var n = this.matches.length\n  if (n === 0)\n    return this._finish()\n\n  var self = this\n  for (var i = 0; i < this.matches.length; i++)\n    this._realpathSet(i, next)\n\n  function next () {\n    if (--n === 0)\n      self._finish()\n  }\n}\n\nGlob.prototype._realpathSet = function (index, cb) {\n  var matchset = this.matches[index]\n  if (!matchset)\n    return cb()\n\n  var found = Object.keys(matchset)\n  var self = this\n  var n = found.length\n\n  if (n === 0)\n    return cb()\n\n  var set = this.matches[index] = Object.create(null)\n  found.forEach(function (p, i) {\n    // If there's a problem with the stat, then it means that\n    // one or more of the links in the realpath couldn't be\n    // resolved.  just return the abs value in that case.\n    p = self._makeAbs(p)\n    fs.realpath(p, self.realpathCache, function (er, real) {\n      if (!er)\n        set[real] = true\n      else if (er.syscall === 'stat')\n        set[p] = true\n      else\n        self.emit('error', er) // srsly wtf right here\n\n      if (--n === 0) {\n        self.matches[index] = set\n        cb()\n      }\n    })\n  })\n}\n\nGlob.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlob.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n\nGlob.prototype.abort = function () {\n  this.aborted = true\n  this.emit('abort')\n}\n\nGlob.prototype.pause = function () {\n  if (!this.paused) {\n    this.paused = true\n    this.emit('pause')\n  }\n}\n\nGlob.prototype.resume = function () {\n  if (this.paused) {\n    this.emit('resume')\n    this.paused = false\n    if (this._emitQueue.length) {\n      var eq = this._emitQueue.slice(0)\n      this._emitQueue.length = 0\n      for (var i = 0; i < eq.length; i ++) {\n        var e = eq[i]\n        this._emitMatch(e[0], e[1])\n      }\n    }\n    if (this._processQueue.length) {\n      var pq = this._processQueue.slice(0)\n      this._processQueue.length = 0\n      for (var i = 0; i < pq.length; i ++) {\n        var p = pq[i]\n        this._processing--\n        this._process(p[0], p[1], p[2], p[3])\n      }\n    }\n  }\n}\n\nGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\n  assert(this instanceof Glob)\n  assert(typeof cb === 'function')\n\n  if (this.aborted)\n    return\n\n  this._processing++\n  if (this.paused) {\n    this._processQueue.push([pattern, index, inGlobStar, cb])\n    return\n  }\n\n  //console.error('PROCESS %d', this._processing, pattern)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index, cb)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip _processing\n  if (childrenIgnored(this, read))\n    return cb()\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)\n}\n\nGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\nGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return cb()\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return cb()\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return cb()\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix) {\n      if (prefix !== '/')\n        e = prefix + '/' + e\n      else\n        e = prefix + e\n    }\n    this._process([e].concat(remain), index, inGlobStar, cb)\n  }\n  cb()\n}\n\nGlob.prototype._emitMatch = function (index, e) {\n  if (this.aborted)\n    return\n\n  if (this.matches[index][e])\n    return\n\n  if (this.paused) {\n    this._emitQueue.push([index, e])\n    return\n  }\n\n  var abs = this._makeAbs(e)\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  if (this.mark)\n    e = this._mark(e)\n\n  this.matches[index][e] = true\n\n  var st = this.statCache[abs]\n  if (st)\n    this.emit('stat', e, st)\n\n  this.emit('match', e)\n}\n\nGlob.prototype._readdirInGlobStar = function (abs, cb) {\n  if (this.aborted)\n    return\n\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false, cb)\n\n  var lstatkey = 'lstat\\0' + abs\n  var self = this\n  var lstatcb = inflight(lstatkey, lstatcb_)\n\n  if (lstatcb)\n    fs.lstat(abs, lstatcb)\n\n  function lstatcb_ (er, lstat) {\n    if (er)\n      return cb()\n\n    var isSym = lstat.isSymbolicLink()\n    self.symlinks[abs] = isSym\n\n    // If it's not a symlink or a dir, then it's definitely a regular file.\n    // don't bother doing a readdir in that case.\n    if (!isSym && !lstat.isDirectory()) {\n      self.cache[abs] = 'FILE'\n      cb()\n    } else\n      self._readdir(abs, false, cb)\n  }\n}\n\nGlob.prototype._readdir = function (abs, inGlobStar, cb) {\n  if (this.aborted)\n    return\n\n  cb = inflight('readdir\\0'+abs+'\\0'+inGlobStar, cb)\n  if (!cb)\n    return\n\n  //console.error('RD %j %j', +inGlobStar, abs)\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs, cb)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return cb()\n\n    if (Array.isArray(c))\n      return cb(null, c)\n  }\n\n  var self = this\n  fs.readdir(abs, readdirCb(this, abs, cb))\n}\n\nfunction readdirCb (self, abs, cb) {\n  return function (er, entries) {\n    if (er)\n      self._readdirError(abs, er, cb)\n    else\n      self._readdirEntries(abs, entries, cb)\n  }\n}\n\nGlob.prototype._readdirEntries = function (abs, entries, cb) {\n  if (this.aborted)\n    return\n\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n  return cb(null, entries)\n}\n\nGlob.prototype._readdirError = function (f, er, cb) {\n  if (this.aborted)\n    return\n\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      this.cache[this._makeAbs(f)] = 'FILE'\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict) return this.emit('error', er)\n      if (!this.silent) console.error('glob error', er)\n      break\n  }\n  return cb()\n}\n\nGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\n\nGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n  //console.error('pgs2', prefix, remain[0], entries)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return cb()\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false, cb)\n\n  var isSym = this.symlinks[abs]\n  var len = entries.length\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return cb()\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true, cb)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true, cb)\n  }\n\n  cb()\n}\n\nGlob.prototype._processSimple = function (prefix, index, cb) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var self = this\n  this._stat(prefix, function (er, exists) {\n    self._processSimple2(prefix, index, er, exists, cb)\n  })\n}\nGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\n\n  //console.error('ps2', prefix, exists)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return cb()\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n  cb()\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlob.prototype._stat = function (f, cb) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return cb()\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return cb(null, c)\n\n    if (needDir && c === 'FILE')\n      return cb()\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (stat !== undefined) {\n    if (stat === false)\n      return cb(null, stat)\n    else {\n      var type = stat.isDirectory() ? 'DIR' : 'FILE'\n      if (needDir && type === 'FILE')\n        return cb()\n      else\n        return cb(null, type, stat)\n    }\n  }\n\n  var self = this\n  var statcb = inflight('stat\\0' + abs, lstatcb_)\n  if (statcb)\n    fs.lstat(abs, statcb)\n\n  function lstatcb_ (er, lstat) {\n    if (lstat && lstat.isSymbolicLink()) {\n      // If it's a symlink, then treat it as the target, unless\n      // the target does not exist, then treat it as a file.\n      return fs.stat(abs, function (er, stat) {\n        if (er)\n          self._stat2(f, abs, null, lstat, cb)\n        else\n          self._stat2(f, abs, er, stat, cb)\n      })\n    } else {\n      self._stat2(f, abs, er, lstat, cb)\n    }\n  }\n}\n\nGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\n  if (er) {\n    this.statCache[abs] = false\n    return cb()\n  }\n\n  var needDir = f.slice(-1) === '/'\n  this.statCache[abs] = stat\n\n  if (abs.slice(-1) === '/' && !stat.isDirectory())\n    return cb(null, false, stat)\n\n  var c = stat.isDirectory() ? 'DIR' : 'FILE'\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c !== 'DIR')\n    return cb()\n\n  return cb(null, c, stat)\n}\n"]}