{"version":3,"sources":["/Users/ashar61/work/projects/drop-box/node_modules/rimraf/node_modules/glob/node_modules/minimatch/node_modules/brace-expansion/test/bash-comparison.js"],"names":[],"mappings":";;AAAA,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AAC3B,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,IAAI,OAAO,GAAG,SAAS,GAAG,mBAAmB,CAAC;AAC9C,IAAI,KAAK,GAAG,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;;;AAG/D,KAAK,CAAC,GAAG,EAAE,CAAA;;AAEX,IAAI,CAAC,yBAAyB,EAAE,UAAS,CAAC,EAAE;AAC1C,OAAK,CAAC,OAAO,CAAC,UAAS,QAAQ,EAAE;AAC/B,QAAI,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC/B,QAAI,OAAO,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC;AAC1B,QAAI,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;;;;;AAK7B,QAAI,GAAG,CAAC,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;AACrC,SAAG,GAAG,EAAE,CAAA;KACT,MAAM;;;AAGL,SAAG,GAAG,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;AACzB,eAAO,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAA;OACjC,CAAC,CAAA;KACH;;AAED,KAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;GAC9B,CAAC,CAAC;AACH,GAAC,CAAC,GAAG,EAAE,CAAC;CACT,CAAC,CAAA","file":"bash-comparison-compiled.js","sourcesContent":["var test = require('tape');\nvar expand = require('..');\nvar fs = require('fs');\nvar resfile = __dirname + '/bash-results.txt';\nvar cases = fs.readFileSync(resfile, 'utf8').split('><><><><');\n\n// throw away the EOF marker\ncases.pop()\n\ntest('matches bash expansions', function(t) {\n  cases.forEach(function(testcase) {\n    var set = testcase.split('\\n');\n    var pattern = set.shift();\n    var actual = expand(pattern);\n\n    // If it expands to the empty string, then it's actually\n    // just nothing, but Bash is a singly typed language, so\n    // \"nothing\" is the same as \"\".\n    if (set.length === 1 && set[0] === '') {\n      set = []\n    } else {\n      // otherwise, strip off the [] that were added so that\n      // \"\" expansions would be preserved properly.\n      set = set.map(function (s) {\n        return s.replace(/^\\[|\\]$/g, '')\n      })\n    }\n\n    t.same(actual, set, pattern);\n  });\n  t.end();\n})\n"]}