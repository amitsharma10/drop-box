{"version":3,"sources":["/Users/ashar61/work/projects/drop-box/node_modules/rimraf/node_modules/glob/node_modules/inflight/node_modules/wrappy/wrappy.js"],"names":[],"mappings":";;;;;;;AAKA,MAAM,CAAC,OAAO,GAAG,MAAM,CAAA;AACvB,SAAS,MAAM,CAAE,EAAE,EAAE,EAAE,EAAE;AACvB,MAAI,EAAE,IAAI,EAAE;AAAE,WAAO,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAA;GAAA,AAEnC,IAAI,OAAO,EAAE,KAAK,UAAU,EAC1B,MAAM,IAAI,SAAS,CAAC,uBAAuB,CAAC,CAAA;;AAE9C,QAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AACnC,WAAO,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;GACnB,CAAC,CAAA;;AAEF,SAAO,OAAO,CAAA;;AAEd,WAAS,OAAO,GAAG;AACjB,QAAI,IAAI,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;AACtC,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpC,UAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAA;KACvB;AACD,QAAI,GAAG,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;AAC9B,QAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAC,CAAC,CAAC,CAAA;AAC5B,QAAI,OAAO,GAAG,KAAK,UAAU,IAAI,GAAG,KAAK,EAAE,EAAE;AAC3C,YAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AACnC,WAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;OACf,CAAC,CAAA;KACH;AACD,WAAO,GAAG,CAAA;GACX;CACF","file":"wrappy-compiled.js","sourcesContent":["// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n"]}