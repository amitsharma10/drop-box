{"version":3,"sources":["/Users/ashar61/work/projects/drop-box/node_modules/rimraf/node_modules/glob/node_modules/inflight/inflight.js"],"names":[],"mappings":";;AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAA;AAC9B,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;AAC9B,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;;AAE1B,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAA;;AAEjC,SAAS,QAAQ,CAAE,GAAG,EAAE,EAAE,EAAE;AAC1B,MAAI,IAAI,CAAC,GAAG,CAAC,EAAE;AACb,QAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;AAClB,WAAO,IAAI,CAAA;GACZ,MAAM;AACL,QAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;AAChB,WAAO,OAAO,CAAC,GAAG,CAAC,CAAA;GACpB;CACF;;AAED,SAAS,OAAO,CAAE,GAAG,EAAE;AACrB,SAAO,IAAI,CAAC,SAAS,GAAG,GAAI;AAC1B,QAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAA;AACnB,QAAI,GAAG,GAAG,GAAG,CAAC,MAAM,CAAA;AACpB,QAAI,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,CAAA;AAC3B,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAC5B,SAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;KACzB;AACD,QAAI,GAAG,CAAC,MAAM,GAAG,GAAG,EAAE;;;AAGpB,SAAG,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA;AAClB,aAAO,CAAC,QAAQ,CAAC,YAAY;AAC3B,WAAG,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;OACtB,CAAC,CAAA;KACH,MAAM;AACL,aAAO,IAAI,CAAC,GAAG,CAAC,CAAA;KACjB;GACF,CAAC,CAAA;CACH;;AAED,SAAS,KAAK,CAAE,IAAI,EAAE;AACpB,MAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA;AACxB,MAAI,KAAK,GAAG,EAAE,CAAA;;AAEd,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;AACnD,SAAO,KAAK,CAAA;CACb","file":"inflight-compiled.js","sourcesContent":["var wrappy = require('wrappy')\nvar reqs = Object.create(null)\nvar once = require('once')\n\nmodule.exports = wrappy(inflight)\n\nfunction inflight (key, cb) {\n  if (reqs[key]) {\n    reqs[key].push(cb)\n    return null\n  } else {\n    reqs[key] = [cb]\n    return makeres(key)\n  }\n}\n\nfunction makeres (key) {\n  return once(function RES () {\n    var cbs = reqs[key]\n    var len = cbs.length\n    var args = slice(arguments)\n    for (var i = 0; i < len; i++) {\n      cbs[i].apply(null, args)\n    }\n    if (cbs.length > len) {\n      // added more in the interim.\n      // de-zalgo, just in case, but don't call again.\n      cbs.splice(0, len)\n      process.nextTick(function () {\n        RES.apply(null, args)\n      })\n    } else {\n      delete reqs[key]\n    }\n  })\n}\n\nfunction slice (args) {\n  var length = args.length\n  var array = []\n\n  for (var i = 0; i < length; i++) array[i] = args[i]\n  return array\n}\n"]}