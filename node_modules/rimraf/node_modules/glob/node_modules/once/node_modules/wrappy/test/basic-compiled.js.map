{"version":3,"sources":["/Users/ashar61/work/projects/drop-box/node_modules/rimraf/node_modules/glob/node_modules/once/node_modules/wrappy/test/basic.js"],"names":[],"mappings":";;AAAA,IAAI,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAA;AAC9B,IAAI,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC,CAAA;;AAEpC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,EAAE;AACzB,WAAS,SAAS,CAAE,EAAE,EAAE;AACtB,QAAI,MAAM,GAAG,KAAK,CAAA;AAClB,WAAO,YAAY;AACjB,UAAI,MAAM,EAAE,OAAM;AAClB,YAAM,GAAG,IAAI,CAAA;AACb,aAAO,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;KACjC,CAAA;GACF;AACD,WAAS,CAAC,OAAO,GAAG,EAAE,CAAA;AACtB,MAAI,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAA;AAC5B,GAAC,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,OAAO,CAAC,CAAA;;AAExC,MAAI,MAAM,GAAG,CAAC,CAAA;AACd,WAAS,GAAG,GAAI;AACd,KAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;AAClB,UAAM,EAAE,CAAA;GACT;;AAED,KAAG,CAAC,MAAM,GAAG,IAAI,CAAA;;AAEjB,MAAI,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,CAAA;;AAE7B,eAAa,EAAE,CAAA;AACf,eAAa,EAAE,CAAA;AACf,GAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;;;AAGlB,GAAC,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;;AAEnC,MAAI,IAAI,GAAG,EAAE,CAAA;AACb,MAAI,OAAO,GAAG,MAAM,CAAC,UAAU,GAAG,EAAE,EAAE,EAAE;AACtC,QAAI,CAAC,IAAI,CAAC,GAAG,GAAG,cAAc,CAAC,CAAA;AAC/B,WAAO,YAAY;AACjB,UAAI,CAAC,IAAI,CAAC,GAAG,GAAG,YAAY,CAAC,CAAA;AAC7B,UAAI,GAAG,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;AACnC,UAAI,CAAC,IAAI,CAAC,GAAG,GAAG,WAAW,CAAC,CAAA;KAC7B,CAAA;GACF,CAAC,CAAA;;AAEF,MAAI,CAAC,GAAG,OAAO,CAAC,KAAK,EAAE,YAAY;AACjC,KAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAE,iBAAiB,EAAE,eAAe,CAAE,CAAC,CAAA;GACrD,CAAC,CAAA;AACF,GAAC,EAAE,CAAA;AACH,GAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAE,iBAAiB,EAAE,eAAe,EAAE,cAAc,CAAE,CAAC,CAAA;;AAEpE,GAAC,CAAC,GAAG,EAAE,CAAA;CACR,CAAC,CAAA","file":"basic-compiled.js","sourcesContent":["var test = require('tap').test\nvar wrappy = require('../wrappy.js')\n\ntest('basic', function (t) {\n  function onceifier (cb) {\n    var called = false\n    return function () {\n      if (called) return\n      called = true\n      return cb.apply(this, arguments)\n    }\n  }\n  onceifier.iAmOnce = {}\n  var once = wrappy(onceifier)\n  t.equal(once.iAmOnce, onceifier.iAmOnce)\n\n  var called = 0\n  function boo () {\n    t.equal(called, 0)\n    called++\n  }\n  // has some rando property\n  boo.iAmBoo = true\n\n  var onlyPrintOnce = once(boo)\n\n  onlyPrintOnce() // prints 'boo'\n  onlyPrintOnce() // does nothing\n  t.equal(called, 1)\n\n  // random property is retained!\n  t.equal(onlyPrintOnce.iAmBoo, true)\n\n  var logs = []\n  var logwrap = wrappy(function (msg, cb) {\n    logs.push(msg + ' wrapping cb')\n    return function () {\n      logs.push(msg + ' before cb')\n      var ret = cb.apply(this, arguments)\n      logs.push(msg + ' after cb')\n    }\n  })\n\n  var c = logwrap('foo', function () {\n    t.same(logs, [ 'foo wrapping cb', 'foo before cb' ])\n  })\n  c()\n  t.same(logs, [ 'foo wrapping cb', 'foo before cb', 'foo after cb' ])\n\n  t.end()\n})\n"]}