'use strict';

var wrappy = require('wrappy');
module.exports = wrappy(once);

once.proto = once(function () {
  Object.defineProperty(Function.prototype, 'once', {
    value: function value() {
      return once(this);
    },
    configurable: true
  });
});

function once(fn) {
  var f = (function (_f) {
    function f() {
      return _f.apply(this, arguments);
    }

    f.toString = function () {
      return _f.toString();
    };

    return f;
  })(function () {
    if (f.called) return f.value;
    f.called = true;
    return f.value = fn.apply(this, arguments);
  });
  f.called = false;
  return f;
}

//# sourceMappingURL=once-compiled.js.map