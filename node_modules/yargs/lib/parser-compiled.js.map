{"version":3,"sources":["/Users/ashar61/work/projects/drop-box/node_modules/yargs/lib/parser.js"],"names":[],"mappings":"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","file":"parser-compiled.js","sourcesContent":["// fancy-pants parsing of argv, originally forked\n// from minimist: https://www.npmjs.com/package/minimist\nvar camelCase = require('camelcase'),\n  path = require('path')\n\nfunction increment (orig) {\n  return orig !== undefined ? orig + 1 : 0\n}\n\nmodule.exports = function (args, opts) {\n  if (!opts) opts = {}\n  var flags = { arrays: {}, bools: {}, strings: {}, counts: {}, normalize: {}, configs: {} }\n\n  ;[].concat(opts['array']).filter(Boolean).forEach(function (key) {\n    flags.arrays[key] = true\n  })\n\n  ;[].concat(opts['boolean']).filter(Boolean).forEach(function (key) {\n    flags.bools[key] = true\n  })\n\n  ;[].concat(opts.string).filter(Boolean).forEach(function (key) {\n    flags.strings[key] = true\n  })\n\n  ;[].concat(opts.count).filter(Boolean).forEach(function (key) {\n    flags.counts[key] = true\n  })\n\n  ;[].concat(opts.normalize).filter(Boolean).forEach(function (key) {\n    flags.normalize[key] = true\n  })\n\n  ;[].concat(opts.config).filter(Boolean).forEach(function (key) {\n    flags.configs[key] = true\n  })\n\n  var aliases = {},\n  newAliases = {}\n\n  extendAliases(opts.key)\n  extendAliases(opts.alias)\n\n  var defaults = opts['default'] || {}\n  Object.keys(defaults).forEach(function (key) {\n    if (/-/.test(key) && !opts.alias[key]) {\n      aliases[key] = aliases[key] || []\n    }\n    (aliases[key] || []).forEach(function (alias) {\n      defaults[alias] = defaults[key]\n    })\n  })\n\n  var argv = { _: [] }\n\n  Object.keys(flags.bools).forEach(function (key) {\n    setArg(key, !(key in defaults) ? false : defaults[key])\n  })\n\n  var notFlags = []\n  if (args.indexOf('--') !== -1) {\n    notFlags = args.slice(args.indexOf('--') + 1)\n    args = args.slice(0, args.indexOf('--'))\n  }\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i],\n      broken,\n      key,\n      letters,\n      m,\n      next\n\n    // -- seperated by =\n    if (arg.match(/^--.+=/)) {\n      // Using [\\s\\S] instead of . because js doesn't support the\n      // 'dotall' regex modifier. See:\n      // http://stackoverflow.com/a/1068308/13216\n      m = arg.match(/^--([^=]+)=([\\s\\S]*)$/)\n      setArg(m[1], m[2])\n    } else if (arg.match(/^--no-.+/)) {\n      key = arg.match(/^--no-(.+)/)[1]\n      setArg(key, false)\n\n    // -- seperated by space.\n    } else if (arg.match(/^--.+/)) {\n      key = arg.match(/^--(.+)/)[1]\n\n      if (checkAllAliases(key, opts.narg)) {\n        i = eatNargs(i, key, args)\n      } else {\n        next = args[i + 1]\n\n        if (next !== undefined && !next.match(/^-/)\n        && !checkAllAliases(key, flags.bools)\n        && !checkAllAliases(key, flags.counts)) {\n          setArg(key, next)\n          i++\n        } else if (/^(true|false)$/.test(next)) {\n          setArg(key, next)\n          i++\n        } else {\n          setArg(key, defaultForType(guessType(key, flags)))\n        }\n      }\n\n    // dot-notation flag seperated by '='.\n    } else if (arg.match(/^-.\\..+=/)) {\n      m = arg.match(/^-([^=]+)=([\\s\\S]*)$/)\n      setArg(m[1], m[2])\n\n    // dot-notation flag seperated by space.\n    } else if (arg.match(/^-.\\..+/)) {\n      next = args[i + 1]\n      key = arg.match(/^-(.\\..+)/)[1]\n\n      if (next !== undefined && !next.match(/^-/)\n        && !checkAllAliases(key, flags.bools)\n        && !checkAllAliases(key, flags.counts)) {\n        setArg(key, next)\n        i++\n      } else {\n        setArg(key, defaultForType(guessType(key, flags)))\n      }\n    } else if (arg.match(/^-[^-]+/)) {\n      letters = arg.slice(1, -1).split('')\n      broken = false\n\n      for (var j = 0; j < letters.length; j++) {\n        next = arg.slice(j + 2)\n\n        if (letters[j + 1] && letters[j + 1] === '=') {\n          setArg(letters[j], arg.slice(j + 3))\n          broken = true\n          break\n        }\n\n        if (next === '-') {\n          setArg(letters[j], next)\n          continue\n        }\n\n        if (/[A-Za-z]/.test(letters[j])\n        && /-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next)) {\n          setArg(letters[j], next)\n          broken = true\n          break\n        }\n\n        if (letters[j + 1] && letters[j + 1].match(/\\W/)) {\n          setArg(letters[j], arg.slice(j + 2))\n          broken = true\n          break\n        } else {\n          setArg(letters[j], defaultForType(guessType(letters[j], flags)))\n        }\n      }\n\n      key = arg.slice(-1)[0]\n\n      if (!broken && key !== '-') {\n        if (checkAllAliases(key, opts.narg)) {\n          i = eatNargs(i, key, args)\n        } else {\n          if (args[i + 1] && !/^(-|--)[^-]/.test(args[i + 1])\n          && !checkAllAliases(key, flags.bools)\n          && !checkAllAliases(key, flags.counts)) {\n            setArg(key, args[i + 1])\n            i++\n          } else if (args[i + 1] && /true|false/.test(args[i + 1])) {\n            setArg(key, args[i + 1])\n            i++\n          } else {\n            setArg(key, defaultForType(guessType(key, flags)))\n          }\n        }\n      }\n    } else {\n      argv._.push(\n        flags.strings['_'] || !isNumber(arg) ? arg : Number(arg)\n      )\n    }\n  }\n\n  setConfig(argv)\n  applyDefaultsAndAliases(argv, aliases, defaults)\n\n  Object.keys(flags.counts).forEach(function (key) {\n    setArg(key, defaults[key])\n  })\n\n  notFlags.forEach(function (key) {\n    argv._.push(key)\n  })\n\n  // how many arguments should we consume, based\n  // on the nargs option?\n  function eatNargs (i, key, args) {\n    var toEat = checkAllAliases(key, opts.narg)\n\n    if (args.length - (i + 1) < toEat) throw Error('not enough arguments following: ' + key)\n\n    for (var ii = i + 1; ii < (toEat + i + 1); ii++) {\n      setArg(key, args[ii])\n    }\n\n    return (i + toEat)\n  }\n\n  function setArg (key, val) {\n    // handle parsing boolean arguments --foo=true --bar false.\n    if (checkAllAliases(key, flags.bools) || checkAllAliases(key, flags.counts)) {\n      if (typeof val === 'string') val = val === 'true'\n    }\n\n    if (/-/.test(key) && !(aliases[key] && aliases[key].length)) {\n      var c = camelCase(key)\n      aliases[key] = [c]\n      newAliases[c] = true\n    }\n\n    var value = !checkAllAliases(key, flags.strings) && isNumber(val) ? Number(val) : val\n\n    if (checkAllAliases(key, flags.counts)) {\n      value = increment\n    }\n\n    var splitKey = key.split('.')\n    setKey(argv, splitKey, value)\n\n    ;(aliases[splitKey[0]] || []).forEach(function (x) {\n      x = x.split('.')\n\n      // handle populating dot notation for both\n      // the key and its aliases.\n      if (splitKey.length > 1) {\n        var a = [].concat(splitKey)\n        a.shift() // nuke the old key.\n        x = x.concat(a)\n      }\n\n      setKey(argv, x, value)\n    })\n\n    var keys = [key].concat(aliases[key] || [])\n    for (var i = 0, l = keys.length; i < l; i++) {\n      if (flags.normalize[keys[i]]) {\n        keys.forEach(function (key) {\n          argv.__defineSetter__(key, function (v) {\n            val = path.normalize(v)\n          })\n\n          argv.__defineGetter__(key, function () {\n            return typeof val === 'string' ?\n            path.normalize(val) : val\n          })\n        })\n        break\n      }\n    }\n  }\n\n  // set args from config.json file, this should be\n  // applied last so that defaults can be applied.\n  function setConfig (argv) {\n    var configLookup = {}\n\n    // expand defaults/aliases, in-case any happen to reference\n    // the config.json file.\n    applyDefaultsAndAliases(configLookup, aliases, defaults)\n\n    Object.keys(flags.configs).forEach(function (configKey) {\n      var configPath = argv[configKey] || configLookup[configKey]\n      if (configPath) {\n        try {\n          var config = require(path.resolve(process.cwd(), configPath))\n\n          Object.keys(config).forEach(function (key) {\n            // setting arguments via CLI takes precedence over\n            // values within the config file.\n            if (argv[key] === undefined) {\n              delete argv[key]\n              setArg(key, config[key])\n            }\n          })\n        } catch (ex) {\n          throw Error('invalid json config file: ' + configPath)\n        }\n      }\n    })\n  }\n\n  function applyDefaultsAndAliases (obj, aliases, defaults) {\n    Object.keys(defaults).forEach(function (key) {\n      if (!hasKey(obj, key.split('.'))) {\n        setKey(obj, key.split('.'), defaults[key])\n\n        ;(aliases[key] || []).forEach(function (x) {\n          setKey(obj, x.split('.'), defaults[key])\n        })\n      }\n    })\n  }\n\n  function hasKey (obj, keys) {\n    var o = obj\n    keys.slice(0, -1).forEach(function (key) {\n      o = (o[key] || {})\n    })\n\n    var key = keys[keys.length - 1]\n    return key in o\n  }\n\n  function setKey (obj, keys, value) {\n    var o = obj\n    keys.slice(0, -1).forEach(function (key) {\n      if (o[key] === undefined) o[key] = {}\n      o = o[key]\n    })\n\n    var key = keys[keys.length - 1]\n    if (value === increment) {\n      o[key] = increment(o[key])\n    } else if (o[key] === undefined && checkAllAliases(key, flags.arrays)) {\n      o[key] = Array.isArray(value) ? value : [value]\n    } else if (o[key] === undefined || typeof o[key] === 'boolean') {\n      o[key] = value\n    } else if (Array.isArray(o[key])) {\n      o[key].push(value)\n    } else {\n      o[key] = [ o[key], value ]\n    }\n  }\n\n  // extend the aliases list with inferred aliases.\n  function extendAliases (obj) {\n    Object.keys(obj || {}).forEach(function (key) {\n      aliases[key] = [].concat(opts.alias[key] || [])\n      // For \"--option-name\", also set argv.optionName\n      aliases[key].concat(key).forEach(function (x) {\n        if (/-/.test(x)) {\n          var c = camelCase(x)\n          aliases[key].push(c)\n          newAliases[c] = true\n        }\n      })\n      aliases[key].forEach(function (x) {\n        aliases[x] = [key].concat(aliases[key].filter(function (y) {\n          return x !== y\n        }))\n      })\n    })\n  }\n\n  // check if a flag is set for any of a key's aliases.\n  function checkAllAliases (key, flag) {\n    var isSet = false,\n    toCheck = [].concat(aliases[key] || [], key)\n\n    toCheck.forEach(function (key) {\n      if (flag[key]) isSet = flag[key]\n    })\n\n    return isSet\n  }\n\n  // return a default value, given the type of a flag.,\n  // e.g., key of type 'string' will default to '', rather than 'true'.\n  function defaultForType (type) {\n    var def = {\n      boolean: true,\n      string: '',\n      array: []\n    }\n\n    return def[type]\n  }\n\n  // given a flag, enforce a default type.\n  function guessType (key, flags) {\n    var type = 'boolean'\n\n    if (flags.strings && flags.strings[key]) type = 'string'\n    else if (flags.arrays && flags.arrays[key]) type = 'array'\n\n    return type\n  }\n\n  function isNumber (x) {\n    if (typeof x === 'number') return true\n    if (/^0x[0-9a-f]+$/i.test(x)) return true\n    return /^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(x)\n  }\n\n  return {\n    argv: argv,\n    aliases: aliases,\n    newAliases: newAliases\n  }\n}\n"]}