{"version":3,"sources":["/Users/ashar61/work/projects/drop-box/node_modules/yargs/lib/validation.js"],"names":[],"mappings":"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","file":"validation-compiled.js","sourcesContent":["// validation-type-stuff, missing params,\n// bad implications, custom checks.\nmodule.exports = function (yargs, usage) {\n  var self = {}\n\n  // validate appropriate # of non-option\n  // arguments were provided, i.e., '_'.\n  self.nonOptionCount = function (argv) {\n    var demanded = yargs.getDemanded()\n\n    if (demanded._ && argv._.length < demanded._.count) {\n      if (demanded._.msg !== undefined) {\n        usage.fail(demanded._.msg)\n      } else {\n        usage.fail('Not enough non-option arguments: got '\n          + argv._.length + ', need at least ' + demanded._.count\n        )\n      }\n    }\n  }\n\n  // make sure that any args that require an\n  // value (--foo=bar), have a value.\n  self.missingArgumentValue = function (argv) {\n    var options = yargs.getOptions(),\n      defaultValues = [true, false, '']\n\n    if (options.requiresArg.length > 0) {\n      var missingRequiredArgs = []\n\n      options.requiresArg.forEach(function (key) {\n        var value = argv[key]\n\n        // if a value is explicitly requested,\n        // flag argument as missing if it does not\n        // look like foo=bar was entered.\n        if (~defaultValues.indexOf(value)\n        || (Array.isArray(value) && !value.length)) {\n          missingRequiredArgs.push(key)\n        }\n      })\n\n      if (missingRequiredArgs.length === 1) {\n        usage.fail('Missing argument value: ' + missingRequiredArgs[0])\n      } else if (missingRequiredArgs.length > 1) {\n        var message = 'Missing argument values: ' + missingRequiredArgs.join(', ')\n        usage.fail(message)\n      }\n    }\n  }\n\n  // make sure all the required arguments are present.\n  self.requiredArguments = function (argv) {\n    var demanded = yargs.getDemanded(),\n      missing = null\n\n    Object.keys(demanded).forEach(function (key) {\n      if (!argv.hasOwnProperty(key)) {\n        missing = missing || {}\n        missing[key] = demanded[key]\n      }\n    })\n\n    if (missing) {\n      var customMsgs = []\n      Object.keys(missing).forEach(function (key) {\n        var msg = missing[key].msg\n        if (msg && customMsgs.indexOf(msg) < 0) {\n          customMsgs.push(msg)\n        }\n      })\n\n      var customMsg = customMsgs.length ? '\\n' + customMsgs.join('\\n') : ''\n      usage.fail('Missing required arguments: ' + Object.keys(missing).join(', ') + customMsg)\n    }\n  }\n\n  // check for unknown arguments (strict-mode).\n  self.unknownArguments = function (argv, aliases) {\n    var descriptions = usage.getDescriptions(),\n      demanded = yargs.getDemanded(),\n      unknown = [],\n      aliasLookup = {}\n\n    Object.keys(aliases).forEach(function (key) {\n      aliases[key].forEach(function (alias) {\n        aliasLookup[alias] = key\n      })\n    })\n\n    Object.keys(argv).forEach(function (key) {\n      if (key !== '$0' && key !== '_' &&\n        !descriptions.hasOwnProperty(key) &&\n        !demanded.hasOwnProperty(key) &&\n        !aliasLookup.hasOwnProperty(key)) {\n        unknown.push(key)\n      }\n    })\n\n    if (unknown.length === 1) {\n      usage.fail('Unknown argument: ' + unknown[0])\n    } else if (unknown.length > 1) {\n      usage.fail('Unknown arguments: ' + unknown.join(', '))\n    }\n  }\n\n  // custom checks, added using the `check` option on yargs.\n  var checks = []\n  self.check = function (f) {\n    checks.push(f)\n  }\n\n  self.customChecks = function (argv, aliases) {\n    checks.forEach(function (f) {\n      try {\n        var result = f(argv, aliases)\n        if (!result) {\n          usage.fail('Argument check failed: ' + f.toString())\n        } else if (typeof result === 'string') {\n          usage.fail(result)\n        }\n      } catch (err) {\n        usage.fail(err.message ? err.message : err)\n      }\n    })\n  }\n\n  // check implications, argument foo implies => argument bar.\n  var implied = {}\n  self.implies = function (key, value) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.implies(k, key[k])\n      })\n    } else {\n      implied[key] = value\n    }\n  }\n  self.getImplied = function () {\n    return implied\n  }\n\n  self.implications = function (argv) {\n    var implyFail = []\n\n    Object.keys(implied).forEach(function (key) {\n      var num,\n        origKey = key,\n        value = implied[key]\n\n      // convert string '1' to number 1\n      num = Number(key)\n      key = isNaN(num) ? key : num\n\n      if (typeof key === 'number') {\n        // check length of argv._\n        key = argv._.length >= key\n      } else if (key.match(/^--no-.+/)) {\n        // check if key doesn't exist\n        key = key.match(/^--no-(.+)/)[1]\n        key = !argv[key]\n      } else {\n        // check if key exists\n        key = argv[key]\n      }\n\n      num = Number(value)\n      value = isNaN(num) ? value : num\n\n      if (typeof value === 'number') {\n        value = argv._.length >= value\n      } else if (value.match(/^--no-.+/)) {\n        value = value.match(/^--no-(.+)/)[1]\n        value = !argv[value]\n      } else {\n        value = argv[value]\n      }\n\n      if (key && !value) {\n        implyFail.push(origKey)\n      }\n    })\n\n    if (implyFail.length) {\n      var msg = 'Implications failed:\\n'\n\n      implyFail.forEach(function (key) {\n        msg += ('  ' + key + ' -> ' + implied[key])\n      })\n\n      usage.fail(msg)\n    }\n  }\n\n  return self\n}\n"]}