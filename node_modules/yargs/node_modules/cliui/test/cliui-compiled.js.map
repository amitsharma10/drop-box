{"version":3,"sources":["/Users/ashar61/work/projects/drop-box/node_modules/yargs/node_modules/cliui/test/cliui.js"],"names":[],"mappings":"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","file":"cliui-compiled.js","sourcesContent":["/* global describe, it */\n\nrequire('chai').should()\n\nvar cliui = require('../')\n\ndescribe('cliui', function () {\n  describe('div', function () {\n    it(\"wraps text at 'width' if a single column is given\", function () {\n      var ui = cliui({\n        width: 10\n      })\n\n      ui.div('i am a string that should be wrapped')\n\n      ui.toString().split('\\n').forEach(function (row) {\n        row.length.should.be.lte(10)\n      })\n    })\n\n    it('evenly divides text across columns if multiple columns are given', function () {\n      var ui = cliui({\n        width: 40\n      })\n\n      ui.div(\n        {text: 'i am a string that should be wrapped', width: 15},\n        'i am a second string that should be wrapped',\n        'i am a third string that should be wrapped'\n      )\n\n      // total width of all columns is <=\n      // the width cliui is initialized with.\n      ui.toString().split('\\n').forEach(function (row) {\n        row.length.should.be.lte(40)\n      })\n\n      // it should wrap each column appropriately.\n      var expected = [\n       'i am a string  i am a      i am a third',\n       'that should be second      string that',\n       'wrapped        string that should be',\n       '               should be   wrapped',\n       '               wrapped'\n      ]\n\n      ui.toString().split('\\n').should.eql(expected)\n    })\n\n    it('allows for a blank row to be appended', function () {\n      var ui = cliui({\n        width: 40\n      })\n\n      ui.div()\n\n      // it should wrap each column appropriately.\n      var expected = ['']\n\n      ui.toString().split('\\n').should.eql(expected)\n    })\n  })\n\n  describe('_columnWidths', function () {\n    it('uses same width for each column by default', function () {\n      var ui = cliui({\n          width: 40\n        }),\n        widths = ui._columnWidths([{}, {}, {}])\n\n      widths[0].should.equal(13)\n      widths[1].should.equal(13)\n      widths[2].should.equal(13)\n    })\n\n    it('divides width over remaining columns if first column has width specified', function () {\n      var ui = cliui({\n          width: 40\n        }),\n        widths = ui._columnWidths([{width: 20}, {}, {}])\n\n      widths[0].should.equal(20)\n      widths[1].should.equal(10)\n      widths[2].should.equal(10)\n    })\n\n    it('divides width over remaining columns if middle column has width specified', function () {\n      var ui = cliui({\n          width: 40\n        }),\n        widths = ui._columnWidths([{}, {width: 10}, {}])\n\n      widths[0].should.equal(15)\n      widths[1].should.equal(10)\n      widths[2].should.equal(15)\n    })\n\n    it('keeps track of remaining width if multiple columns have width specified', function () {\n      var ui = cliui({\n          width: 40\n        }),\n        widths = ui._columnWidths([{width: 20}, {width: 12}, {}])\n\n      widths[0].should.equal(20)\n      widths[1].should.equal(12)\n      widths[2].should.equal(8)\n    })\n\n    it('uses a sane default if impossible widths are specified', function () {\n      var ui = cliui({\n          width: 40\n        }),\n        widths = ui._columnWidths([{width: 30}, {width: 30}, {padding: [0, 2, 0, 1]}])\n\n      widths[0].should.equal(30)\n      widths[1].should.equal(30)\n      widths[2].should.equal(4)\n    })\n  })\n\n  describe('alignment', function () {\n    it('allows a column to be right aligned', function () {\n      var ui = cliui({\n        width: 40\n      })\n\n      ui.div(\n        'i am a string',\n        {text: 'i am a second string', align: 'right'},\n        'i am a third string that should be wrapped'\n      )\n\n      // it should right-align the second column.\n      var expected = [\n       'i am a stringi am a secondi am a third',\n       '                    stringstring that',\n       '                          should be',\n       '                          wrapped'\n      ]\n\n      ui.toString().split('\\n').should.eql(expected)\n    })\n\n    it('allows a column to be center aligned', function () {\n      var ui = cliui({\n        width: 60\n      })\n\n      ui.div(\n        'i am a string',\n        {text: 'i am a second string', align: 'center', padding: [0, 2, 0, 2]},\n        'i am a third string that should be wrapped'\n      )\n\n      // it should right-align the second column.\n      var expected = [\n       'i am a string          i am a second       i am a third string',\n       '                           string          that should be',\n       '                                           wrapped'\n      ]\n\n      ui.toString().split('\\n').should.eql(expected)\n    })\n  })\n\n  describe('padding', function () {\n    it('handles left/right padding', function () {\n      var ui = cliui({\n        width: 40\n      })\n\n      ui.div(\n        {text: 'i have padding on my left', padding: [0, 0, 0, 4]},\n        {text: 'i have padding on my right', padding: [0, 2, 0, 0], align: 'center'},\n        {text: 'i have no padding', padding: [0, 0, 0, 0]}\n      )\n\n      // it should add left/right padding to columns.\n      var expected = [\n       '    i have     i have      i have no',\n       '    padding  padding on    padding',\n       '    on my     my right',\n       '    left'\n      ]\n\n      ui.toString().split('\\n').should.eql(expected)\n    })\n\n    it('handles top/bottom padding', function () {\n      var ui = cliui({\n        width: 40\n      })\n\n      ui.div(\n        'i am a string',\n        {text: 'i am a second string', padding: [2, 0, 0, 0]},\n        {text: 'i am a third string that should be wrapped', padding: [0, 0, 1, 0]}\n      )\n\n      // it should add top/bottom padding to second\n      // and third columns.\n      var expected = [\n       'i am a string             i am a third',\n       '                          string that',\n       '             i am a secondshould be',\n       '             string       wrapped',\n       ''\n      ]\n\n      ui.toString().split('\\n').should.eql(expected)\n    })\n  })\n\n  describe('wrap', function () {\n    it('allows wordwrap to be disabled', function () {\n      var ui = cliui({\n        wrap: false\n      })\n\n      ui.div(\n        {text: 'i am a string', padding: [0, 1, 0, 0]},\n        {text: 'i am a second string', padding: [0, 2, 0, 0]},\n        {text: 'i am a third string that should not be wrapped', padding: [0, 0, 0, 2]}\n      )\n\n      ui.toString().should.equal('i am a string i am a second string    i am a third string that should not be wrapped')\n    })\n  })\n\n  describe('span', function () {\n    it('appends the next row to the end of the prior row if it fits', function () {\n      var ui = cliui({\n        width: 40\n      })\n\n      ui.span(\n        {text: 'i am a string that will be wrapped', width: 30}\n      )\n\n      ui.div(\n        {text: ' [required] [default: 99]', align: 'right'}\n      )\n\n      var expected = [\n       'i am a string that will be',\n       'wrapped         [required] [default: 99]'\n      ]\n\n      ui.toString().split('\\n').should.eql(expected)\n    })\n\n    it('does not append the string if it does not fit on the prior row', function () {\n      var ui = cliui({\n        width: 40\n      })\n\n      ui.span(\n        {text: 'i am a string that will be wrapped', width: 30}\n      )\n\n      ui.div(\n        {text: 'i am a second row', align: 'left'}\n      )\n\n      var expected = [\n       'i am a string that will be',\n       'wrapped',\n       'i am a second row'\n      ]\n\n      ui.toString().split('\\n').should.eql(expected)\n    })\n\n    it('always appends text to prior span if wrap is disabled', function () {\n      var ui = cliui({\n        wrap: false,\n        width: 40\n      })\n\n      ui.span(\n        {text: 'i am a string that will be wrapped', width: 30}\n      )\n\n      ui.div(\n        {text: 'i am a second row', align: 'left', padding: [0, 0, 0, 3]}\n      )\n\n      ui.div('a third line')\n\n      var expected = [\n       'i am a string that will be wrapped   i am a second row',\n       'a third line'\n      ]\n\n      ui.toString().split('\\n').should.eql(expected)\n    })\n  })\n\n  describe('layoutDSL', function () {\n    it('turns tab into multiple columns', function () {\n      var ui = cliui({\n        width: 60\n      })\n\n      ui.div(\n        '  <regex>  \\tmy awesome regex\\n  <my second thing>  \\tanother row\\t  a third column'\n      )\n\n      var expected = [\n       '  <regex>            my awesome regex',\n       '  <my second thing>  another row          a third column'\n      ]\n\n      ui.toString().split('\\n').should.eql(expected)\n    })\n\n    it('turns newline into multiple rows', function () {\n      var ui = cliui({\n        width: 40\n      })\n\n      ui.div(\n        'Usage: $0\\n  <regex>\\t  my awesome regex\\n  <glob>\\t  my awesome glob\\t  [required]'\n      )\n      var expected = [\n       'Usage: $0',\n       '  <regex>  my awesome regex',\n       '  <glob>   my awesome     [required]',\n       '           glob'\n      ]\n\n      ui.toString().split('\\n').should.eql(expected)\n    })\n\n    it('does not apply DSL if wrap is false', function () {\n      var ui = cliui({\n        width: 40,\n        wrap: false\n      })\n\n      ui.div(\n        'Usage: $0\\ttwo\\tthree'\n      )\n\n      ui.toString().should.eql('Usage: $0\\ttwo\\tthree')\n    })\n\n  })\n})\n"]}