{"version":3,"sources":["/Users/ashar61/work/projects/drop-box/node_modules/yargs/node_modules/cliui/node_modules/wordwrap/index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["var wordwrap = module.exports = function (start, stop, params) {\n    if (typeof start === 'object') {\n        params = start;\n        start = params.start;\n        stop = params.stop;\n    }\n    \n    if (typeof stop === 'object') {\n        params = stop;\n        start = start || params.start;\n        stop = undefined;\n    }\n    \n    if (!stop) {\n        stop = start;\n        start = 0;\n    }\n    \n    if (!params) params = {};\n    var mode = params.mode || 'soft';\n    var re = mode === 'hard' ? /\\b/ : /(\\S+\\s+)/;\n    \n    return function (text) {\n        var chunks = text.toString()\n            .split(re)\n            .reduce(function (acc, x) {\n                if (mode === 'hard') {\n                    for (var i = 0; i < x.length; i += stop - start) {\n                        acc.push(x.slice(i, i + stop - start));\n                    }\n                }\n                else acc.push(x)\n                return acc;\n            }, [])\n        ;\n        \n        return chunks.reduce(function (lines, rawChunk) {\n            if (rawChunk === '') return lines;\n            \n            var chunk = rawChunk.replace(/\\t/g, '    ');\n            \n            var i = lines.length - 1;\n            if (lines[i].length + chunk.length > stop) {\n                lines[i] = lines[i].replace(/\\s+$/, '');\n                \n                chunk.split(/\\n/).forEach(function (c) {\n                    lines.push(\n                        new Array(start + 1).join(' ')\n                        + c.replace(/^\\s+/, '')\n                    );\n                });\n            }\n            else if (chunk.match(/\\n/)) {\n                var xs = chunk.split(/\\n/);\n                lines[i] += xs.shift();\n                xs.forEach(function (c) {\n                    lines.push(\n                        new Array(start + 1).join(' ')\n                        + c.replace(/^\\s+/, '')\n                    );\n                });\n            }\n            else {\n                lines[i] += chunk;\n            }\n            \n            return lines;\n        }, [ new Array(start + 1).join(' ') ]).join('\\n');\n    };\n};\n\nwordwrap.soft = wordwrap;\n\nwordwrap.hard = function (start, stop) {\n    return wordwrap(start, stop, { mode : 'hard' });\n};\n"]}