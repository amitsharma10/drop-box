{"version":3,"sources":["/Users/ashar61/work/projects/drop-box/node_modules/yargs/node_modules/cliui/node_modules/wordwrap/test/break.js"],"names":[],"mappings":";;AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;;AAE9B,OAAO,CAAC,IAAI,GAAG,YAAY;AACvB,QAAI,CAAC,GAAG,8DAA8D,GAChE,qDAAqD,GACrD,yBAAyB,CAC9B;AACD,QAAI,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE9B,QAAI,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC3B,UAAM,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AAC9B,UAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC;AAChC,UAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC;;AAEhC,UAAM,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;CAC1C,CAAC;;AAEF,OAAO,SAAM,GAAG,YAAY;AACxB,QAAI,CAAC,GAAG,IAAI,KAAK,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAClC,QAAI,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE9B,QAAI,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC3B,UAAM,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AAC9B,UAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC;AAClC,UAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC;AAClC,UAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC;;AAElC,UAAM,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;CAC1C,CAAC","file":"break-compiled.js","sourcesContent":["var assert = require('assert');\nvar wordwrap = require('../');\n\nexports.hard = function () {\n    var s = 'Assert from {\"type\":\"equal\",\"ok\":false,\"found\":1,\"wanted\":2,'\n        + '\"stack\":[],\"id\":\"b7ddcd4c409de8799542a74d1a04689b\",'\n        + '\"browser\":\"chrome/6.0\"}'\n    ;\n    var s_ = wordwrap.hard(80)(s);\n    \n    var lines = s_.split('\\n');\n    assert.equal(lines.length, 2);\n    assert.ok(lines[0].length < 80);\n    assert.ok(lines[1].length < 80);\n    \n    assert.equal(s, s_.replace(/\\n/g, ''));\n};\n\nexports.break = function () {\n    var s = new Array(55+1).join('a');\n    var s_ = wordwrap.hard(20)(s);\n    \n    var lines = s_.split('\\n');\n    assert.equal(lines.length, 3);\n    assert.ok(lines[0].length === 20);\n    assert.ok(lines[1].length === 20);\n    assert.ok(lines[2].length === 15);\n    \n    assert.equal(s, s_.replace(/\\n/g, ''));\n};\n"]}