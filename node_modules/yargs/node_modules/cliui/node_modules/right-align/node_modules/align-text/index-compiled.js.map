{"version":3,"sources":["/Users/ashar61/work/projects/drop-box/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/index.js"],"names":[],"mappings":";;;;;;;AAOA,YAAY,CAAC;;AAEb,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAChC,IAAI,MAAM,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AACtC,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;;AAEjC,MAAM,CAAC,OAAO,GAAG,SAAS,SAAS,CAAC,GAAG,EAAE,EAAE,EAAE;AAC3C,MAAI,KAAK;MAAE,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;;AAE9B,MAAI,IAAI,KAAK,OAAO,EAAE;AACpB,SAAK,GAAG,GAAG,CAAC;GACb,MAAM,IAAI,IAAI,KAAK,QAAQ,EAAE;AAC5B,SAAK,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;GAC7B,MAAM;AACL,UAAM,IAAI,SAAS,CAAC,uCAAuC,CAAC,CAAC;GAC9D;;AAED,MAAI,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;AACvB,MAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AACzB,MAAI,GAAG,GAAG,EAAE;MAAE,CAAC,GAAG,CAAC,CAAC;;AAEpB,SAAO,GAAG,EAAE,EAAE;AACZ,QAAI,IAAI,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AACtB,QAAI,IAAI,GAAG,OAAO,EAAE,KAAK,UAAU,GAC/B,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,GAC3C,OAAO,EAAE,KAAK,QAAQ,GAAG,EAAE,GAAG,CAAC,CAAC;;AAEpC,QAAI,MAAM,CAAC,IAAI,CAAC,KAAK,QAAQ,EAAE;AAC7B,SAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;KACpC,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,QAAQ,EAAE;AACpC,UAAI,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,IAAI,GAAG,EAAE,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;AAC7D,SAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAA,GAAI,MAAM,GAAG,IAAI,CAAC,CAAC;KAC/C;GACF;;AAED,MAAI,IAAI,KAAK,OAAO;AAAE,WAAO,GAAG,CAAC;GAAA,AACjC,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;CACvB,CAAC","file":"index-compiled.js","sourcesContent":["/*!\n * align-text <https://github.com/jonschlinkert/align-text>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar typeOf = require('kind-of');\nvar repeat = require('repeat-string');\nvar longest = require('longest');\n\nmodule.exports = function alignText(val, fn) {\n  var lines, type = typeOf(val);\n\n  if (type === 'array') {\n    lines = val;\n  } else if (type === 'string') {\n    lines = val.split(/[\\r\\n]/);\n  } else {\n    throw new TypeError('align-text expects a string or array.');\n  }\n\n  var len = lines.length;\n  var max = longest(lines);\n  var res = [], i = 0;\n\n  while (len--) {\n    var line = lines[i++];\n    var diff = typeof fn === 'function'\n      ? fn(line.length, max.length, line, lines, i)\n      : typeof fn === 'number' ? fn : 0;\n\n    if (typeOf(diff) === 'number') {\n      res.push(repeat(' ', diff) + line);\n    } else if (typeOf(diff) === 'object') {\n      var result = repeat(diff.character || ' ', diff.indent || 0);\n      res.push((diff.prefix || '') + result + line);\n    }\n  }\n\n  if (type === 'array') return res;\n  return res.join('\\n');\n};\n"]}