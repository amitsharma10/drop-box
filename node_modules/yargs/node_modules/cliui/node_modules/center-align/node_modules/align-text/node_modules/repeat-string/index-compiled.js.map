{"version":3,"sources":["/Users/ashar61/work/projects/drop-box/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/repeat-string/index.js"],"names":[],"mappings":";;;;;;;AAOA,YAAY,CAAC;;;;;;AAMb,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC;;;;;;;;;;;;;;;;;;;;AAoBxB,SAAS,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE;AACxB,MAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC3B,UAAM,IAAI,SAAS,CAAC,iCAAiC,CAAC,CAAC;GACxD;;AAED,MAAI,GAAG,KAAK,CAAC;AAAE,WAAO,GAAG,CAAC;GAAA,AAC1B,IAAI,GAAG,KAAK,CAAC;AAAE,WAAO,GAAG,GAAG,GAAG,CAAC;GAAA,AAEhC,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC;AAC3B,MAAI,KAAK,KAAK,GAAG,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;AACjD,SAAK,GAAG,GAAG,CAAC;AACZ,OAAG,GAAG,EAAE,CAAC;GACV;;AAED,SAAO,GAAG,GAAG,GAAG,CAAC,MAAM,IAAI,GAAG,GAAG,CAAC,EAAE;AAClC,QAAI,GAAG,GAAG,CAAC,EAAE;AACX,SAAG,IAAI,GAAG,CAAC;KACZ;;AAED,OAAG,KAAK,CAAC,CAAC;AACV,QAAI,CAAC,GAAG,EAAE,MAAM;AAChB,OAAG,IAAI,GAAG,CAAC;GACZ;;AAED,SAAO,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;CAC3B;;;;;;AAMD,IAAI,GAAG,GAAG,EAAE,CAAC;AACb,IAAI,KAAK,CAAC","file":"index-compiled.js","sourcesContent":["/*!\n * repeat-string <https://github.com/jonschlinkert/repeat-string>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n/**\n * Expose `repeat`\n */\n\nmodule.exports = repeat;\n\n/**\n * Repeat the given `string` the specified `number`\n * of times.\n *\n * **Example:**\n *\n * ```js\n * var repeat = require('repeat-string');\n * repeat('A', 5);\n * //=> AAAAA\n * ```\n *\n * @param {String} `string` The string to repeat\n * @param {Number} `number` The number of times to repeat the string\n * @return {String} Repeated string\n * @api public\n */\n\nfunction repeat(str, num) {\n  if (typeof str !== 'string') {\n    throw new TypeError('repeat-string expects a string.');\n  }\n\n  if (num === 1) return str;\n  if (num === 2) return str + str;\n\n  var max = str.length * num;\n  if (cache !== str || typeof cache === 'undefined') {\n    cache = str;\n    res = '';\n  }\n\n  while (max > res.length && num > 0) {\n    if (num & 1) {\n      res += str;\n    }\n\n    num >>= 1;\n    if (!num) break;\n    str += str;\n  }\n\n  return res.substr(0, max);\n}\n\n/**\n * Results cache\n */\n\nvar res = '';\nvar cache;\n"]}